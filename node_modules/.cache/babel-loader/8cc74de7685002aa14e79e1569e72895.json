{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tinas\\\\Desktop\\\\react-demo\\\\react-demo\\\\src\\\\components\\\\characters\\\\List.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { BASE_URL } from \"../../constants/api\";\nimport CharacterItem from \"./CharacterItem\";\nimport Search from \"./Search\";\n\nfunction List() {\n  // state = local variables that belong only to this component\n  // set up state variables\n  // make the api call\n  // when api call comes back store the return value in state variables\n  // loop over the state variables to display\n  const [results, setResults] = useState([]); // default value is empty array\n\n  const [filteredResults, setFilteredResults] = useState([]); // useEffect runs when component gets mounted\n  // also when the component gets updated\n  // when  the component gets loaded into the browser\n  // make the api\n\n  useEffect(function () {\n    fetch(BASE_URL) // make the call to the api\n    .then(function (response) {\n      return response.json(); // what comes back which is a promise\n    }).then(function (json) {\n      console.dir(json.results); // this is the actual return value from the value\n\n      setResults(json.results);\n      setFilteredResults(json.results);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  function handleSearch(inputValue) {\n    const lowerCaseInput = inputValue.toLowerCase(); // filter function creates a new array from an existing array\n\n    const filteredArray = results.filter(function (result) {\n      const lowercaseName = result.name.toLowerCase();\n\n      if (lowercaseName.startsWith(lowerCaseInput)) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    setFilteredResults(filteredArray);\n  }\n\n  function displayResults() {\n    if (filteredResults.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }\n      }, \"No results\");\n    }\n\n    return filteredResults.map(function (result) {\n      const href = \"character/\" + result.id;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        key: result.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, result.name), /*#__PURE__*/React.createElement(\"img\", {\n        src: result.image,\n        alt: result.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CharacterItem, {\n        rating: result.rating,\n        gender: result.gender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"a\", {\n        href: href,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, \"Details\"));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    doSearch: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), displayResults());\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/tinas/Desktop/react-demo/react-demo/src/components/characters/List.js"],"names":["React","useEffect","useState","BASE_URL","CharacterItem","Search","List","results","setResults","filteredResults","setFilteredResults","fetch","then","response","json","console","dir","catch","error","log","handleSearch","inputValue","lowerCaseInput","toLowerCase","filteredArray","filter","result","lowercaseName","name","startsWith","displayResults","length","map","href","id","image","rating","gender"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,IAAT,GAAgB;AACZ;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC,CAPY,CAOgC;;AAC5C,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD,CARY,CAUZ;AACA;AAEA;AACA;;AACAD,EAAAA,SAAS,CAAC,YAAW;AACjBU,IAAAA,KAAK,CAACR,QAAD,CAAL,CAAgB;AAAhB,KACKS,IADL,CACU,UAASC,QAAT,EAAmB;AACrB,aAAOA,QAAQ,CAACC,IAAT,EAAP,CADqB,CACG;AAC3B,KAHL,EAIKF,IAJL,CAIU,UAASE,IAAT,EAAe;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACP,OAAjB,EADiB,CACU;;AAC3BC,MAAAA,UAAU,CAACM,IAAI,CAACP,OAAN,CAAV;AACAG,MAAAA,kBAAkB,CAACI,IAAI,CAACP,OAAN,CAAlB;AACH,KARL,EASKU,KATL,CASW,UAASC,KAAT,EAAgB;AACnBH,MAAAA,OAAO,CAACI,GAAR,CAAYD,KAAZ;AACH,KAXL;AAYH,GAbQ,EAaN,EAbM,CAAT;;AAeA,WAASE,YAAT,CAAsBC,UAAtB,EAAkC;AAC9B,UAAMC,cAAc,GAAGD,UAAU,CAACE,WAAX,EAAvB,CAD8B,CAG9B;;AACA,UAAMC,aAAa,GAAGjB,OAAO,CAACkB,MAAR,CAAe,UAASC,MAAT,EAAiB;AAClD,YAAMC,aAAa,GAAGD,MAAM,CAACE,IAAP,CAAYL,WAAZ,EAAtB;;AAEA,UAAII,aAAa,CAACE,UAAd,CAAyBP,cAAzB,CAAJ,EAA8C;AAC1C,eAAO,IAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAP;AACH;AACJ,KARqB,CAAtB;AAUAZ,IAAAA,kBAAkB,CAACc,aAAD,CAAlB;AACH;;AAED,WAASM,cAAT,GAA0B;AACtB,QAAIrB,eAAe,CAACsB,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAED,WAAOtB,eAAe,CAACuB,GAAhB,CAAoB,UAASN,MAAT,EAAiB;AACxC,YAAMO,IAAI,GAAG,eAAeP,MAAM,CAACQ,EAAnC;AAEA,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,GAAG,EAAER,MAAM,CAACE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBF,MAAM,CAACE,IAA9B,CADJ,eAEI;AAAK,QAAA,GAAG,EAAEF,MAAM,CAACS,KAAjB;AAAwB,QAAA,GAAG,EAAET,MAAM,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAEF,MAAM,CAACU,MAA9B;AAAsC,QAAA,MAAM,EAAEV,MAAM,CAACW,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII;AAAG,QAAA,IAAI,EAAEJ,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CADJ;AAQH,KAXM,CAAP;AAYH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEb,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGKU,cAAc,EAHnB,CADJ;AAOH;;AAED,eAAexB,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BASE_URL } from \"../../constants/api\";\nimport CharacterItem from \"./CharacterItem\";\nimport Search from \"./Search\";\n\nfunction List() {\n    // state = local variables that belong only to this component\n    // set up state variables\n    // make the api call\n    // when api call comes back store the return value in state variables\n    // loop over the state variables to display\n\n    const [results, setResults] = useState([]); // default value is empty array\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    // useEffect runs when component gets mounted\n    // also when the component gets updated\n\n    // when  the component gets loaded into the browser\n    // make the api\n    useEffect(function() {\n        fetch(BASE_URL) // make the call to the api\n            .then(function(response) {\n                return response.json(); // what comes back which is a promise\n            })\n            .then(function(json) {\n                console.dir(json.results); // this is the actual return value from the value\n                setResults(json.results);\n                setFilteredResults(json.results);\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    }, []);\n\n    function handleSearch(inputValue) {\n        const lowerCaseInput = inputValue.toLowerCase();\n\n        // filter function creates a new array from an existing array\n        const filteredArray = results.filter(function(result) {\n            const lowercaseName = result.name.toLowerCase();\n\n            if (lowercaseName.startsWith(lowerCaseInput)) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        setFilteredResults(filteredArray);\n    }\n\n    function displayResults() {\n        if (filteredResults.length === 0) {\n            return <div>No results</div>;\n        }\n\n        return filteredResults.map(function(result) {\n            const href = \"character/\" + result.id;\n\n            return (\n                <div className=\"card\">\n                    <h1 key={result.name}>{result.name}</h1>\n                    <img src={result.image} alt={result.name} />\n                    <CharacterItem rating={result.rating} gender={result.gender} />\n                    <a href={href}>Details</a>\n                </div>\n            );\n        });\n    }\n\n    return (\n        <div>\n            <Search doSearch={handleSearch} />\n\n            {displayResults()}\n        </div>\n    );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}